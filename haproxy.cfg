# ===============================
#  HAProxy Configuration Example
#  Layering HAProxy in front of a Node.js app
#  Listening on port 8080 â†’ Forwarding to port 3000
# ===============================

# -------------------------------
# GLOBAL SETTINGS
# -------------------------------
global
    # Where HAProxy should send its logs.
    # Here, it logs to the local syslog server at 127.0.0.1
    log 127.0.0.1 local0 debug

    # You can set other global settings here, such as:
    # maxconn - maximum number of concurrent connections
    # daemon  - run in the background
    # For now, we keep it simple.

# -------------------------------
# DEFAULTS SECTION
# -------------------------------
defaults
    # Inherit the logging settings from 'global'
    log     global

    # Operate in HTTP mode (as opposed to TCP mode)
    # This tells HAProxy to understand HTTP-specific features
    mode    http

    # Enables HTTP-specific logging (method, URL, status code, etc.)
    option  httplog

    # Timeout settings to avoid hanging connections:
    # How long HAProxy waits for a connection to establish to the backend
    timeout connect 5s

    # How long HAProxy will wait for client activity (e.g., browser sending data)
    timeout client 30s

    # How long HAProxy will wait for server activity (e.g., backend sending data)
    timeout server 30s

# -------------------------------
# FRONTEND: Incoming connections
# -------------------------------
frontend http-in
    # Bind to all network interfaces (*) on port 8080
    # This is the port HAProxy listens on for HTTP requests
    bind *:8080

    # The backend pool to route requests to
    default_backend node-backend

# -------------------------------
# BACKEND: Where requests get sent
# -------------------------------
backend node-backend
    # Define a single Node.js server instance
    # Format: server <name> <host>:<port> [options]
    server node1 127.0.0.1:3000

    # Notes:
    # - 'node1' is just a label for this server
    # - 127.0.0.1 means HAProxy will talk to a server running locally
    # - :3000 is the port our Express server is listening on
    #
    # Later, we can add more servers here for load balancing:
    # server node2 127.0.0.1:3001
    # server node3 127.0.0.1:3002
